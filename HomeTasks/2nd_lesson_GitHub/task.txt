Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal. - touch task.txt
 2. Сценарий перенесите в этот файл. vim task.txt , i, копируем содержимое (shift + insert), выход с сохранением = esc, :wq enter 
 3. На против каждого действия - напишите команду в GitBash

JSON
 4. Создать внешний репозиторий c названием JSON.
= (сохраняю в уже существующем репозитории Ksendzov_QA-Study_Course\HomeTasks\2nd_lesson_GitHub)
 5. Клонировать репозиторий JSON на локальный компьютер. = git clone https://github.com/DispearQA/Ksendzov_QA-Study_Course.git 
 6. Внутри локального JSON создать файл “new.json”.  =  touch new.json
 7. Добавить файл под гит. = git add .
 8. Закоммитить файл. = git commit -m "add new.json"
 9. Отправить файл на внешний GitHub репозиторий. = git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. 
= vim new.json , i , и вношу инфо в формате json, esc, :wq enter 
 11. Отправить изменения на внешний репозиторий. = git commit -am "add changes to new.json" ; git push
 12. Создать файл preferences.json = touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
= vim preferences.json, i , и вношу информацию в формате JSON, esc, :wq enter 
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
= touch sklls.json открываю через vim и вношу информацию в формате JSON, esc, :wq enter 
 15. Отправить сразу 2 файла на внешний репозиторий. = git add . ; git commit -am "add 2 json files" ; git push
 16. На веб интерфейсе создать файл bug_report.json. +
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. +
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 20. Синхронизировать внешний и локальный репозиторий JSON = git pull

XML
 21. Создать внешний репозиторий c названием XML.
= (сохраняю в уже существующем репозитории Ksendzov_QA-Study_Course\HomeTasks\2nd_lesson_GitHub)
 22. Клонировать репозиторий XML на локальный компьютер. = git clone https://github.com/DispearQA/Ksendzov_QA-Study_Course.git 
 23. Внутри локального XML создать файл “new.xml”. = touch new.xml
 24. Добавить файл под гит. = git add .
 25. Закоммитить файл. = git commit -m "add new.xml"
 26. Отправить файл на внешний GitHub репозиторий. = git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
= vim new.xml и вношу инфо в формате XML, esc, :wq enter 
 28. Отправить изменения на внешний репозиторий. = git commit -am "add changes to new.xml" ; git push
 29. Создать файл preferences.xml = touch preferences.json
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
= vim preferences.json i , вношу информацию в формате XML, esc, :wq enter 
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
= touch sklls.xml, vim skills.xml, i и вношу информацию в формате XML, esc, :wq enter 
 32. Сделать коммит в одну строку. = git add . ; git commit -am "add 2 json files"
 33. Отправить сразу 2 файла на внешний репозиторий. = git push
 34. На веб интерфейсе создать файл bug_report.xml. +
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. +
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. +
 38. Синхронизировать внешний и локальный репозиторий XML = git pull
